{"version":3,"file":"extension.js","mappings":"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","sources":[".././node_modules/path-browserify/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../external commonjs \"vscode\"",".././src/commands.ts",".././node_modules/js-base64/base64.mjs",".././src/document.ts",".././src/lang.ts",".././src/editor.ts",".././src/uri-handler.ts",".././src/extension.ts"],"sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"vscode\");","import * as vscode from \"vscode\";\n\nfunction getConfigurationScope(\n  config: vscode.WorkspaceConfiguration,\n  key: string\n) {\n  const inspect = config.inspect(key);\n  if (inspect?.workspaceFolderValue) {\n    return vscode.ConfigurationTarget.WorkspaceFolder;\n  }\n  if (inspect?.workspaceValue) {\n    return vscode.ConfigurationTarget.Workspace;\n  }\n  return vscode.ConfigurationTarget.Global;\n}\n\nasync function updateTheme() {\n  const excalidrawConfig = vscode.workspace.getConfiguration(\"excalidraw\");\n  const initialTheme = excalidrawConfig.get<string>(\"theme\");\n  // Todo: find out the scope of the current theme config before updating it\n  const configurationScope = getConfigurationScope(excalidrawConfig, \"theme\");\n  const updateThemeConfig = (variant: string | undefined) => {\n    excalidrawConfig.update(\"theme\", variant, configurationScope);\n  };\n\n  const quickPick = vscode.window.createQuickPick();\n  const items = [\n    {\n      label: \"light\",\n      description: \"Always use light theme\",\n    },\n    {\n      label: \"dark\",\n      description: \"Always use dark theme\",\n    },\n    {\n      label: \"auto\",\n      description: \"Sync theme with VSCode\",\n    },\n  ];\n  quickPick.items = items;\n  quickPick.activeItems = items.filter((item) => item.label === initialTheme);\n\n  quickPick.onDidChangeActive((actives) => {\n    if (actives.length > 0) {\n      updateThemeConfig(actives[0].label);\n    }\n  });\n\n  let confirm = false;\n  quickPick.onDidAccept(() => {\n    confirm = true;\n    const actives = quickPick.activeItems;\n    if (actives.length > 0) {\n      updateThemeConfig(actives[0].label);\n    } else {\n      updateThemeConfig(initialTheme);\n    }\n    quickPick.hide();\n  });\n  quickPick.onDidHide(() => {\n    if (!confirm) {\n      updateThemeConfig(initialTheme);\n    }\n  });\n\n  quickPick.show();\n}\n\nfunction showSource(uri: vscode.Uri, viewColumn?: vscode.ViewColumn) {\n  vscode.window.showTextDocument(uri, { viewColumn });\n}\n\nfunction showEditor(uri: vscode.Uri, viewColumn?: vscode.ViewColumn) {\n  vscode.commands.executeCommand(\n    \"vscode.openWith\",\n    uri,\n    \"editor.excalidraw\",\n    viewColumn\n  );\n}\n\nfunction showImage(uri: vscode.Uri, viewColumn?: vscode.ViewColumn) {\n  vscode.commands.executeCommand(\n    \"vscode.openWith\",\n    uri,\n    \"imagePreview.previewEditor\",\n    viewColumn\n  );\n}\n\nexport function registerCommands(context: vscode.ExtensionContext) {\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"excalidraw.updateTheme\", updateTheme)\n  );\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"excalidraw.showSource\", showSource)\n  );\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"excalidraw.showEditor\", showEditor)\n  );\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"excalidraw.showImage\", showImage)\n  );\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"excalidraw.showImageToSide\", (uri) =>\n      showImage(uri, vscode.ViewColumn.Beside)\n    )\n  );\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"excalidraw.showEditorToSide\", (uri) =>\n      showEditor(uri, vscode.ViewColumn.Beside)\n    )\n  );\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"excalidraw.showSourceToSide\", (uri) =>\n      showSource(uri, vscode.ViewColumn.Beside)\n    )\n  );\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\"excalidraw.preventDefault\", () => {})\n  );\n}\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.4';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","import * as vscode from \"vscode\";\nimport * as path from \"path\";\n\nexport class ExcalidrawDocument implements vscode.CustomDocument {\n  uri: vscode.Uri;\n  content: Uint8Array;\n\n  private _onDidContentChange = new vscode.EventEmitter<void>();\n  public onDidContentChange = this._onDidContentChange.event;\n\n  public readonly contentType;\n\n  getContentType(): string {\n    switch (path.parse(this.uri.fsPath).ext) {\n      case \".svg\":\n        return \"image/svg+xml\";\n      case \".png\":\n        return \"image/png\";\n      default:\n        return \"application/json\";\n    }\n  }\n\n  constructor(uri: vscode.Uri, content: Uint8Array) {\n    this.uri = uri;\n    this.content = content;\n    this.contentType = this.getContentType();\n  }\n\n  async revert() {\n    const content = await vscode.workspace.fs.readFile(this.uri);\n    this.content = content;\n  }\n\n  async backup(destination: vscode.Uri): Promise<vscode.CustomDocumentBackup> {\n    await this.saveAs(destination);\n    return {\n      id: destination.toString(),\n      delete: async () => {\n        try {\n          await vscode.workspace.fs.delete(destination);\n        } catch (e) {}\n      },\n    };\n  }\n\n  async save() {\n    this.saveAs(this.uri);\n  }\n\n  async update(content: Uint8Array) {\n    this.content = content;\n    this._onDidContentChange.fire();\n  }\n\n  async saveAs(destination: vscode.Uri) {\n    return vscode.workspace.fs.writeFile(destination, this.content);\n  }\n\n  private readonly _onDidDispose = new vscode.EventEmitter<void>();\n  /**\n   * Fired when the document is disposed of.\n   */\n  public readonly onDidDispose = this._onDidDispose.event;\n\n  dispose(): void {\n    this._onDidDispose.fire();\n    this._onDidContentChange.dispose();\n  }\n}\n","export const languageMap = {\n  en: \"en\",\n  \"zh-cn\": \"zh-CN\",\n  \"zh-tw\": \"zh-TW\",\n  fr: \"fr-FR\",\n  de: \"de-DE\",\n  it: \"it-IT\",\n  es: \"es-ES\",\n  ja: \"ja-JA\",\n  ko: \"ko-KO\",\n  ru: \"ru-RU\",\n  \"pt-br\": \"pt-BR\",\n  tr: \"tr-TR\",\n  pl: \"pl-PL\",\n  cs: \"cs-CS\",\n};\n","import * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport { Base64 } from \"js-base64\";\n\nimport { ExcalidrawDocument } from \"./document\";\nimport { languageMap } from \"./lang\";\n\nexport class ExcalidrawEditorProvider\n  implements vscode.CustomEditorProvider<ExcalidrawDocument> {\n  public static async register(\n    context: vscode.ExtensionContext\n  ): Promise<vscode.Disposable> {\n    const provider = new ExcalidrawEditorProvider(context);\n    const providerRegistration = vscode.window.registerCustomEditorProvider(\n      ExcalidrawEditorProvider.viewType,\n      provider,\n      {\n        supportsMultipleEditorsPerDocument: false,\n        webviewOptions: { retainContextWhenHidden: true },\n      }\n    );\n\n    ExcalidrawEditorProvider.migrateLegacyLibraryItems(context);\n\n    return providerRegistration;\n  }\n\n  private static migrateLegacyLibraryItems(context: vscode.ExtensionContext) {\n    const libraryItems = context.globalState.get(\"libraryItems\");\n    if (!libraryItems) {\n      return;\n    }\n    context.globalState\n      .update(\n        \"library\",\n        JSON.stringify({\n          type: \"excalidrawlib\",\n          version: 2,\n          source:\n            \"https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor\",\n          libraryItems,\n        })\n      )\n      .then(() => {\n        context.globalState.update(\"libraryItems\", undefined);\n      });\n  }\n\n  private static readonly viewType = \"editor.excalidraw\";\n\n  constructor(private readonly context: vscode.ExtensionContext) { }\n\n  public async resolveCustomEditor(\n    document: ExcalidrawDocument,\n    webviewPanel: vscode.WebviewPanel\n  ) {\n    const editor = new ExcalidrawEditor(\n      document,\n      webviewPanel.webview,\n      this.context\n    );\n    const editorDisposable = await editor.setupWebview();\n\n    webviewPanel.onDidDispose(() => {\n      editorDisposable.dispose();\n    });\n  }\n\n  private readonly _onDidChangeCustomDocument = new vscode.EventEmitter<\n    vscode.CustomDocumentContentChangeEvent<ExcalidrawDocument>\n  >();\n  public readonly onDidChangeCustomDocument =\n    this._onDidChangeCustomDocument.event;\n\n  async backupCustomDocument(\n    document: ExcalidrawDocument,\n    context: vscode.CustomDocumentBackupContext\n  ): Promise<vscode.CustomDocumentBackup> {\n    return document.backup(context.destination);\n  }\n\n  // TODO: Backup Support\n  async openCustomDocument(\n    uri: vscode.Uri,\n    openContext: vscode.CustomDocumentOpenContext\n  ): Promise<ExcalidrawDocument> {\n    const content = await vscode.workspace.fs.readFile(\n      openContext.backupId ? vscode.Uri.parse(openContext.backupId) : uri\n    );\n    const document = new ExcalidrawDocument(uri, content);\n\n    const onDidDocumentChange = document.onDidContentChange(() => {\n      this._onDidChangeCustomDocument.fire({ document });\n    });\n\n    document.onDidDispose(() => {\n      onDidDocumentChange.dispose();\n    });\n\n    return document;\n  }\n\n  revertCustomDocument(document: ExcalidrawDocument): Thenable<void> {\n    return document.revert();\n  }\n\n  saveCustomDocument(document: ExcalidrawDocument): Thenable<void> {\n    return document.save();\n  }\n\n  async saveCustomDocumentAs(\n    document: ExcalidrawDocument,\n    destination: vscode.Uri\n  ) {\n    await document.saveAs(destination);\n  }\n}\n\nexport class ExcalidrawEditor {\n  // Allows to pass events between editors\n  private static _onDidChangeLibrary = new vscode.EventEmitter<string>();\n  private static onDidChangeLibrary =\n    ExcalidrawEditor._onDidChangeLibrary.event;\n  private static _onLibraryImport = new vscode.EventEmitter<{\n    library: string;\n  }>();\n  private static onLibraryImport = ExcalidrawEditor._onLibraryImport.event;\n  private textDecoder = new TextDecoder();\n\n  constructor(\n    readonly document: ExcalidrawDocument,\n    readonly webview: vscode.Webview,\n    readonly context: vscode.ExtensionContext\n  ) { }\n\n  isViewOnly() {\n    return (\n      this.document.uri.scheme === \"git\" ||\n      this.document.uri.scheme === \"conflictResolution\"\n    );\n  }\n\n  public async setupWebview() {\n    // Setup initial content for the webview\n    // Receive message from the webview.\n    this.webview.options = {\n      enableScripts: true,\n    };\n\n    let libraryUri = await this.getLibraryUri();\n\n    const onDidReceiveMessage = this.webview.onDidReceiveMessage(\n      async (msg) => {\n        switch (msg.type) {\n          case \"library-change\":\n            const library = msg.library;\n            await this.saveLibrary(library, libraryUri);\n            ExcalidrawEditor._onDidChangeLibrary.fire(library);\n            break;\n          case \"change\":\n            await this.document.update(new Uint8Array(msg.content));\n            break;\n          case \"link-open\":\n            vscode.env.openExternal(vscode.Uri.parse(msg.url));\n            break;\n          case \"error\":\n            vscode.window.showErrorMessage(msg.content);\n            break;\n          case \"info\":\n            vscode.window.showInformationMessage(msg.content);\n            break;\n        }\n      },\n      this\n    );\n\n    const onDidChangeThemeConfiguration =\n      vscode.workspace.onDidChangeConfiguration((e) => {\n        if (!e.affectsConfiguration(\"excalidraw.theme\", this.document.uri)) {\n          return;\n        }\n        this.webview.postMessage({\n          type: \"theme-change\",\n          theme: this.getTheme(),\n        });\n      }, this);\n\n    vscode.workspace.onDidChangeConfiguration((e) => {\n      if (!e.affectsConfiguration(\"excalidraw.language\", this.document.uri)) {\n        return;\n      }\n      this.webview.postMessage({\n        type: \"language-change\",\n        langCode: this.getLanguage(),\n      });\n    }, this);\n\n    const onDidChangeEmbedConfiguration =\n      vscode.workspace.onDidChangeConfiguration((e) => {\n        if (!e.affectsConfiguration(\"excalidraw.image\", this.document.uri)) {\n          return;\n        }\n        this.webview.postMessage({\n          type: \"image-params-change\",\n          imageParams: this.getImageParams(),\n        });\n      }, this);\n\n    const onDidChangeLibraryConfiguration =\n      vscode.workspace.onDidChangeConfiguration(async (e) => {\n        if (\n          !e.affectsConfiguration(\n            \"excalidraw.workspaceLibraryPath\",\n            this.document.uri\n          )\n        ) {\n          return;\n        }\n\n        libraryUri = await this.getLibraryUri();\n        const library = await this.loadLibrary(libraryUri);\n        this.webview.postMessage({\n          type: \"library-change\",\n          library,\n          merge: false,\n        });\n      });\n\n    const onLibraryImport = ExcalidrawEditor.onLibraryImport(\n      async ({ library }) => {\n        this.webview.postMessage({\n          type: \"library-change\",\n          library,\n          merge: true,\n        });\n      }\n    );\n\n    const onDidChangeLibrary = ExcalidrawEditor.onDidChangeLibrary(\n      (library) => {\n        this.webview.postMessage({\n          type: \"library-change\",\n          library,\n          merge: false,\n        });\n      }\n    );\n\n    this.webview.html = await this.buildHtmlForWebview({\n      content: Array.from(this.document.content),\n      contentType: this.document.contentType,\n      library: await this.loadLibrary(libraryUri),\n      viewModeEnabled: this.isViewOnly() || undefined,\n      theme: this.getTheme(),\n      imageParams: this.getImageParams(),\n      langCode: this.getLanguage(),\n      name: this.extractName(this.document.uri),\n    });\n\n    return new vscode.Disposable(() => {\n      onDidReceiveMessage.dispose();\n      onDidChangeThemeConfiguration.dispose();\n      onLibraryImport.dispose();\n      onDidChangeLibraryConfiguration.dispose();\n      onDidChangeLibrary.dispose();\n      onDidChangeEmbedConfiguration.dispose();\n    });\n  }\n\n  private getImageParams() {\n    return vscode.workspace.getConfiguration(\"excalidraw\").get(\"image\");\n  }\n\n  private getLanguage() {\n    return (\n      vscode.workspace.getConfiguration(\"excalidraw\").get(\"language\") ||\n      languageMap[vscode.env.language as keyof typeof languageMap]\n    );\n  }\n\n  private getTheme() {\n    return vscode.workspace\n      .getConfiguration(\"excalidraw\")\n      .get(\"theme\", \"light\");\n  }\n\n  public extractName(uri: vscode.Uri) {\n    const name = path.parse(uri.fsPath).name;\n    return name.endsWith(\".excalidraw\") ? name.slice(0, -11) : name;\n  }\n\n  public async getLibraryUri() {\n    const libraryPath = await vscode.workspace\n      .getConfiguration(\"excalidraw\")\n      .get<string>(\"workspaceLibraryPath\");\n    const workspaceFolders = vscode.workspace.workspaceFolders;\n    if (!libraryPath || !workspaceFolders) {\n      return;\n    }\n\n    const fileWorkspace = getFileWorkspaceFolder(\n      this.document.uri,\n      workspaceFolders as vscode.WorkspaceFolder[]\n    );\n    if (!fileWorkspace) {\n      return;\n    }\n\n    return vscode.Uri.joinPath(fileWorkspace.uri, libraryPath);\n  }\n\n  public static importLibrary(library: string) {\n    this._onLibraryImport.fire({ library });\n  }\n\n  public async loadLibrary(libraryUri?: vscode.Uri) {\n    if (!libraryUri) {\n      return this.context.globalState.get<string>(\"library\");\n    }\n    try {\n      const libraryContent = await vscode.workspace.fs.readFile(libraryUri);\n      return this.textDecoder.decode(libraryContent);\n    } catch (e) {\n      vscode.window.showErrorMessage(`Failed to load library: ${e}`);\n      return this.context.globalState.get<string>(\"library\");\n    }\n  }\n\n  public async saveLibrary(library: string, libraryUri?: vscode.Uri) {\n    if (!libraryUri) {\n      return this.context.globalState.update(\"library\", library);\n    }\n    try {\n      await vscode.workspace.fs.writeFile(\n        libraryUri,\n        new TextEncoder().encode(library)\n      );\n    } catch (e) {\n      await vscode.window.showErrorMessage(`Failed to save library: ${e}`);\n    }\n  }\n\n  private async buildHtmlForWebview(config: any): Promise<string> {\n    const webviewUri = vscode.Uri.joinPath(this.context.extensionUri, \"webview\", \"dist\");\n    const content = await vscode.workspace.fs.readFile(\n      vscode.Uri.joinPath(webviewUri, \"index.html\")\n    );\n    let html = this.textDecoder.decode(content);\n\n    html = html.replace(\n      \"{{data-excalidraw-config}}\",\n      Base64.encode(JSON.stringify(config))\n    );\n\n    html = html.replace(\n      \"{{excalidraw-asset-path}}\",\n      `${this.webview.asWebviewUri(webviewUri).toString()}/`\n    );\n\n    return this.fixLinks(html, webviewUri);\n  }\n  private fixLinks(document: string, documentUri: vscode.Uri): string {\n    return document.replace(\n      new RegExp(\"((?:src|href)=['\\\"])(.*?)(['\\\"])\", \"gmi\"),\n      (subString: string, p1: string, p2: string, p3: string): string => {\n        const lower = p2.toLowerCase();\n        if (\n          p2.startsWith(\"#\") ||\n          lower.startsWith(\"http://\") ||\n          lower.startsWith(\"https://\")\n        ) {\n          return subString;\n        }\n        const newUri = vscode.Uri.joinPath(documentUri, p2);\n        const newUrl = [p1, this.webview.asWebviewUri(newUri), p3].join(\"\");\n        return newUrl;\n      }\n    );\n  }\n}\n\nfunction getFileWorkspaceFolder(\n  uri: vscode.Uri,\n  workspaceFolders: vscode.WorkspaceFolder[]\n): vscode.WorkspaceFolder | undefined {\n  const parts = uri.path.split(path.sep).slice(0, -1);\n  while (parts.length > 0) {\n    const joined = parts.join(path.sep);\n    const folder = workspaceFolders.find((f) => f.uri.path === joined);\n    if (folder) {\n      return folder;\n    }\n    parts.pop();\n  }\n}\n","import * as vscode from \"vscode\";\nimport { ExcalidrawEditor } from \"./editor\";\n\nexport class ExcalidrawUriHandler implements vscode.UriHandler {\n  public static register() {\n    const provider = new ExcalidrawUriHandler();\n    const providerRegistration = vscode.window.registerUriHandler(provider);\n    return providerRegistration;\n  }\n\n  public async handleUri(uri: vscode.Uri) {\n    const hash = new URLSearchParams(uri.fragment);\n    const libraryUrl = hash.get(\"addLibrary\");\n    if (libraryUrl) {\n      const res = await fetch(libraryUrl);\n      const library = await res.text();\n      ExcalidrawEditor.importLibrary(library);\n    } else {\n      vscode.window.showErrorMessage(\"Invalid URL!\");\n    }\n  }\n}\n","import * as vscode from \"vscode\";\nimport { registerCommands } from \"./commands\";\nimport { ExcalidrawEditorProvider } from \"./editor\";\nimport { ExcalidrawUriHandler } from \"./uri-handler\";\n\nexport async function activate(context: vscode.ExtensionContext) {\n  // Register our custom editor providers\n  context.subscriptions.push(await ExcalidrawEditorProvider.register(context));\n  context.subscriptions.push(ExcalidrawUriHandler.register());\n  registerCommands(context);\n}\n"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","root","base","name","_format","parse","ret","delimiter","win32","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","require","async","updateTheme","excalidrawConfig","initialTheme","configurationScope","config","inspect","workspaceFolderValue","workspaceValue","getConfigurationScope","updateThemeConfig","variant","update","quickPick","items","label","description","activeItems","filter","item","onDidChangeActive","actives","confirm","onDidAccept","hide","onDidHide","show","showSource","uri","viewColumn","showEditor","showImage","_hasbtoa","btoa","_hasBuffer","Buffer","_TE","TextDecoder","TextEncoder","b64chs","Array","_fromCC","a","tab","forEach","c","String","fromCharCode","bind","_mkUriSafe","Uint8Array","src","replace","m0","_btoa","bin","toString","u32","c0","c1","c2","asc","pad","substring","_fromUint8Array","u8a","strs","l","push","apply","subarray","cb_utob","cc","re_utob","_encode","s","encode","gBase64","urlsafe","ExcalidrawDocument","getContentType","this","fsPath","constructor","content","_onDidContentChange","onDidContentChange","event","_onDidDispose","onDidDispose","contentType","destination","saveAs","id","delete","e","fire","dispose","languageMap","en","fr","de","it","es","ja","ko","ru","tr","pl","cs","ExcalidrawEditorProvider","static","context","provider","providerRegistration","viewType","supportsMultipleEditorsPerDocument","webviewOptions","retainContextWhenHidden","migrateLegacyLibraryItems","libraryItems","globalState","type","version","source","then","_onDidChangeCustomDocument","onDidChangeCustomDocument","document","webviewPanel","editor","ExcalidrawEditor","webview","editorDisposable","setupWebview","backup","openContext","backupId","onDidDocumentChange","revertCustomDocument","revert","saveCustomDocument","save","textDecoder","isViewOnly","scheme","options","enableScripts","libraryUri","getLibraryUri","onDidReceiveMessage","msg","library","saveLibrary","_onDidChangeLibrary","url","onDidChangeThemeConfiguration","affectsConfiguration","postMessage","theme","getTheme","langCode","getLanguage","onDidChangeEmbedConfiguration","imageParams","getImageParams","onDidChangeLibraryConfiguration","loadLibrary","merge","onLibraryImport","onDidChangeLibrary","html","buildHtmlForWebview","viewModeEnabled","extractName","endsWith","libraryPath","workspaceFolders","fileWorkspace","parts","split","folder","find","f","pop","getFileWorkspaceFolder","_onLibraryImport","libraryContent","decode","webviewUri","extensionUri","asWebviewUri","fixLinks","documentUri","RegExp","subString","p1","p2","p3","lower","toLowerCase","startsWith","newUri","ExcalidrawUriHandler","libraryUrl","URLSearchParams","fragment","fetch","text","importLibrary","activate","subscriptions","register","registerCommands"],"sourceRoot":""}